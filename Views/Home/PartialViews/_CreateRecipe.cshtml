
@{
    Layout = null;
}
@using System.Web;
@using Recipes.ViewModels;
@using Newtonsoft.Json;
@model RecipeVM
@Html.RenderUnobtrusiveAjaxScript()
@Html.ValidationSummary()

<div class="modal fade" tabindex="-1" id="createModal"
     data-keyboard="false" data-backdrop="static">
@using (Html.AjaxBeginForm("Create", "Home", new AjaxOptions{ 
    OnSuccess = "onSuccess",
    HttpMethod = "Post"
}))
{
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Create new recipe</h3>
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body m-3">

                <div class="input-group input-group-lg mb-3">
                    @Html.LabelFor(model => model.Title, new { @class = "input-group-text"})
                    @Html.TextBoxFor(model => model.Title, new { @placeholder = "Title Name", @class = "form-control" })
                </div>


                <div class="input-group mb-3">
                    @Html.LabelFor(model => model.Summary, new { @class = "input-group-text"})
                    @Html.TextAreaFor(model => model.Summary, new { @placeholder = "Place of summary", @class = "form-control" })
                </div>

                <div class="form-check form-switch">
                    @Html.CheckBoxFor(model => model.Vegetarian, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.Vegetarian, new { @class = "form-check-label"})
                </div>

                <div class="form-check form-switch">
                    @Html.CheckBoxFor(model => model.Vegan, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.Vegan, new { @class = "form-check-label"})
                </div>

                <div class="form-check form-switch">
                    @Html.CheckBoxFor(model => model.GlutenFree, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.GlutenFree, new { @class = "form-check-label"})
                </div>

                <div class="form-check form-switch">
                    @Html.CheckBoxFor(model => model.DairyFree, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.DairyFree, new { @class = "form-check-label"})
                </div>

                <div class="input-group mb-3">
                    @Html.LabelFor(model => model.Instructions, new { @class = "input-group-text"})
                    @Html.TextAreaFor(model => model.Instructions, new { @placeholder = "Instructions", @class = "form-control" })
                </div>
                
                @* <div class="input-group mb-3">
                    @Html.LabelFor(model => model.Ingredients, new { @class = "input-group-text"})
                    @Html.Multi(model => model.Ingredients, new SelectList(Model.AllIngredients), new {  @class = "form-control" })
                </div>*@
            </div>
            
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary button button4">Create</button>
                <button type="button" data-dismiss="modal" class="btn btn-primary button button4">Cancel</button>
            </div>
            
        </div>
    </div>
}
</div>
<script>


    function onSuccess(){
        $('#modal-placeholder > .modal').modal('hide');
    }

</script>

