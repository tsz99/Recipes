@model IndexVM
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Home Page";
}
@using Recipes.ViewModels;
@Html.RenderUnobtrusiveAjaxScript()

@if(User.Identity.IsAuthenticated)
{
<div class="container">
    <div id="modal-placeholder"></div>

    <div class="row">
        <section class="col-2">
            <h2>Search Recipes</h2>
@using (Html.AjaxBeginForm("Search", "Home", new AjaxOptions{ 
    OnSuccess = "onSuccess",
    HttpMethod = "Post"
}))
{
            <div class="form-floating mb-3">
                <input class="form-control" id="floatingInput" name="Title" value="@Model.Title" placeholder="Boiled Egg">
                <label for="floatingInput">Title</label>
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" value="" name="Vegetarian" checked="@Model.IsVegetarian" id="checkVegetarian">
                <label class="form-check-label" for="checkVegetarian">
                    Vegetarian
                </label>
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" value="" name="Vegan" checked="@Model.IsVegan" id="checkVegan">
                <label class="form-check-label" for="checkVegan">
                    Vegan
                </label>
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" value="" name="GlutenFree" checked="@Model.IsGlutenFree" id="checkGlutenFree">
                <label class="form-check-label" for="checkGlutenFree">
                    GlutenFree
                </label>
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" value="" name="DiaryFree" checked="@Model.IsDiaryFree" id="checkDiaryFree">
                <label class="form-check-label" for="checkDiaryFree">
                    DiaryFree
                </label>
            </div>

            <button type="submit" id="callAPIButton" class="btn btn-primary m-3">
                Search
            </button>
}
        </section>
        <section class="col-10">
            <h1>Recipes</h1>

            <p>
                <a href="#" id="createNewButton" class="btn btn-primary">Create New Recipe</a>
            </p>

            <div class="row row-cols-1 row-cols-lg-2 g-3">
                @foreach (var item in Model.Recipes)
                {
                    <div class="col">
                        <div class="card shadow-sm">
                            <img id="detailsButton_@item.DB_ID" class="card-img-top detailsButton" src=@item.Image alt="Card image cap">
                            <div id="detailsButton_@item.DB_ID" class="card-body detailsButton">
                                <h5 class="card-title ">@item.Title</h5>
                                <div class="card-text ">@Html.Raw(@item.Summary)</div>
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                    @if(User.Identity.Name == item.CreatorUser){
                                        <button type="button" id="editButton_@item.DB_ID" class="btn btn-sm btn-outline-secondary editButton">Edit</button>
                                        <button type="button" id="deleteButton_@item.DB_ID" class="btn btn-sm btn-outline-secondary deleteButton">Delete</button>     
                                    }
                                        <button type="button" id="downloadButton_@item.DB_ID" class="btn btn-sm btn-outline-secondary downloadButton">Download</button>
                                    </div>
                                        <small class="text-muted">@item.ReadyInMinutes min</small>
                                    </div>
                            </div>
                            <div class="card-footer">
                                <small class="text-muted text-center">@item.SourceName</small>
                            </div>
                        </div>
                    </div>

                }
            </div>

        </section>
    </div>
</div>
}
else
{
    <div class="container">
        <h1 class="display-4">Welcome</h1>
        <p>To use the application please <a asp-area="Identity" asp-page="/Account/Login">Login</a> or if you do not have an account <a asp-area="Identity" asp-page="/Account/Register">Register</a>.</p>
    </div>
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">

</script>
<script src="bootstrap/js/bootstrap.min.js"></script>
<script>
    $("#createNewButton").click(function () {
        debugger;
        let url = new URL(location.origin + '@Url.Action("Create", "Home")');
        $.get(url).done(function (data) {
            $('#modal-placeholder').html(data);
            $('#modal-placeholder > .modal').modal('show');
        });
    });

    $(".editButton").click(function (e) {
        debugger;
        let idVal = e.currentTarget.id.split('_')[1];
        let url = new URL(location.origin + '@Url.Action("Edit", "Home")');
        url.searchParams.append('id', idVal);
        $.get(url).done(function (data) {
            $('#modal-placeholder').html(data);
            $('#modal-placeholder > .modal').modal('show');
        });
    });

    $(".detailsButton").click(function (e) {
        debugger;
        let idVal = e.currentTarget.id.split('_')[1];
        let url = new URL(location.origin + '@Url.Action("Details", "Home")');
        url.searchParams.append('id', idVal);
        $.get(url).done(function (data) {
            $('#modal-placeholder').html(data);
            $('#modal-placeholder > .modal').modal('show');
        });
    });

    $(".deleteButton").click(function (e) {
        debugger;
        let idVal = e.currentTarget.id.split('_')[1];
        let url = new URL(location.origin + '@Url.Action("Delete", "Home")');
        url.searchParams.append('id', idVal);
        $.get(url).done(function (data) {
            $('#modal-placeholder').html(data);
            $('#modal-placeholder > .modal').modal('show');
        });
    });


    $("#btnHideModal").click(function () {
        $("#modal-placeholder").modal('hide');
    });

    $(".downloadButton").click(function (e) {
        debugger;
        let idVal = e.currentTarget.id.split('_')[1];

        var a = document.createElement("a");
        document.body.appendChild(a);
        a.style = "display: none";
        let url = new URL(location.origin + '@Url.Action("Download", "Home")');
        url.searchParams.append('id', idVal);
        a.href = url;
        a.download = 'Recipe.txt';
        a.click();
        document.body.removeChild(a);
    });

    function onSuccess(){
        location.reload();
    }


</script>
